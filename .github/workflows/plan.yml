# .github/workflows/terraform-plan.yml
name: Terraform Plan

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  plan:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pull-requests: write

    env:
      ENVIRONMENT: null
      AWS_ACCOUNT_ID: null

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Set environment based on branch
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "ENVIRONMENT=prod" >> $GITHUB_ENV
            echo "AWS_ACCOUNT_ID=${{ secrets.AWS_PROD_ACCOUNT_ID }}" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF##*/}" == "develop" ]]; then
            echo "ENVIRONMENT=dev" >> $GITHUB_ENV
            echo "AWS_ACCOUNT_ID=${{ secrets.AWS_DEV_ACCOUNT_ID }}" >> $GITHUB_ENV
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/terraform-exec
          aws-region: ${{ vars.REGION }}

      - name: Install Terraform
        uses: ./.github/workflows/install-terraform.yml

      - name: Run Terraform Plan
        id: plan
        env:
          TF_VAR_account_id: ${{ env.AWS_ACCOUNT_ID }}
          TF_VAR_region: ${{ vars.REGION }}
          TF_VAR_name_prefix: ${{ vars.NAME_PREFIX }}
        run: |
          cd ${{ github.workspace }}/deployment/envs/${{ env.ENVIRONMENT }}
          terraform init
          terraform plan -out=tfplan > plan.txt
          cat plan.txt

      - name: Comment PR with Terraform Plan
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('deployment/envs/${{ env.ENVIRONMENT }}/plan.txt', 'utf8');
            const comment = `## Terraform Plan Result\n\`\`\`\n${plan}\n\`\`\``;
            const context = github.context;
            const pullRequestNumber = context.payload.pull_request.number;
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: pullRequestNumber,
              body: comment,
            });

name: Deploy Infrastructure

on:
  push:
    branches:
      - main
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    env:
      ENVIRONMENT: null
      AWS_ACCOUNT_ID: null
      changes_in_deployment_init: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Set environment based on branch
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "ENVIRONMENT=prod" >> $GITHUB_ENV
            echo "AWS_ACCOUNT_ID=${{ secrets.AWS_PROD_ACCOUNT_ID }}" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF##*/}" == "develop" ]]; then
            echo "ENVIRONMENT=dev" >> $GITHUB_ENV
            echo "AWS_ACCOUNT_ID=${{ secrets.AWS_DEV_ACCOUNT_ID }}" >> $GITHUB_ENV
          fi

      - name: Configure AWS credentials for IAM manager
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/terraform-learn
          aws-region: ${{ vars.REGION }}

      - uses: hashicorp/setup-terraform@v3

      - name: Check if there are changes in deployment/init
        id: check-changes-in-deployment-init
        run: |
          cd ${{ github.workspace }}/deployment/init
          if git diff --name-only HEAD^1 HEAD | grep -q '^deployment/init/'; then
            echo "changes_in_deployment_init=true" >> $GITHUB_ENV
          fi

      - name: Create role
        if: env.changes_in_deployment_init == 'true'
        env:
          TF_VAR_account_id: ${{ env.AWS_ACCOUNT_ID }}
        run: |
          cd ${{ github.workspace }}/deployment/init
          terraform init
          terraform apply -auto-approve

      - name: Configure AWS credentials for deploy
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/terraform-exec
          aws-region: ${{ vars.REGION }}

      - name: Deploy infrastructure
        env:
          TF_VAR_account_id: ${{ env.AWS_ACCOUNT_ID }}
          TF_VAR_region: ${{ vars.REGION }}
          TF_VAR_name_prefix: ${{ vars.NAME_PREFIX }}
        run: |
          cd ${{ github.workspace }}/deployment/envs/${{ env.ENVIRONMENT }}
          terraform init
          terraform apply -auto-approve

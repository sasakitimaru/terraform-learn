name: Deploy Infrastructure

on:
  push:
    branches:
      - main
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set environment based on branch
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "ENVIRONMENT=prod" >> $GITHUB_ENV
            echo "AWS_ACCOUNT_ID=${{ secrets.AWS_PROD_ACCOUNT_ID }}" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF##*/}" == "develop" ]]; then
            echo "ENVIRONMENT=dev" >> $GITHUB_ENV
            echo "AWS_ACCOUNT_ID=${{ secrets.AWS_DEV_ACCOUNT_ID }}" >> $GITHUB_ENV
          fi

      - name: Configure AWS credentials for IAM manager
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/terraform-iam-manager
          aws-region: us-east-1

      - name: Cache Terraform binary
        id: cache-terraform
        uses: actions/cache@v2
        with:
          path: ~/terraform
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/terraform-version.txt') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Install Terraform
        if: steps.cache-terraform.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/terraform
          sudo apt-get update && sudo apt-get install -y gnupg software-properties-common curl
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install -y terraform
          terraform -version > ~/terraform/terraform-version.txt
          cp $(which terraform) ~/terraform/

      - name: Set environment variables for Terraform
        run: echo "TF_VAR_account_id=${{ env.AWS_ACCOUNT_ID }}" >> $GITHUB_ENV

      - name: create role
        run: |
          cd ${{ github.workspace }}/deployment/init
          terraform init
          terraform apply -auto-approve

      - name: Configure AWS credentials for deploy
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/terraform-exec
          aws-region: us-east-1

      - name: Set TF_VAR environment variables
        run: |
          echo "TF_VAR_region=${{ vars.REGION }}" >> $GITHUB_ENV
          echo "TF_VAR_name_prefix=${{ vars.NAME_PREFIX }}" >> $GITHUB_ENV

      - name: deploy infrastructure
        run: |
          cd ${{ github.workspace }}/deployment/envs/${{ env.ENVIRONMENT }}
          terraform init
          terraform apply -auto-approve
